server:
  port: 8080
  forward-headers-strategy: framework
spring:
  datasource:
    url: jdbc:mysql://${GYP_DB_HOSTNAME}:${GYP_DB_PORT}/greenyp
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      maximum-pool-size: 10
      minimum-idle: 0
      max-lifetime: 120000
      idle-timeout: 120000
    username: ${GYP_DB_USERNAME}
    password: ${GYP_DB_PASSWD}
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  freemarker:
    template-loader-path: classpath:/templates/
    suffix: .ftl
    charset: UTF-8
  jpa:
    generate-ddl: false
    show-sql: false
    properties:
      hibernate:
        format_sql: false
  mail:
    host: email-smtp.us-east-1.amazonaws.com
    port: 587
    username: ${GYP_AWS_SES_USERNAME}
    password: ${GYP_AWS_SES_TOKEN}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  application:
    name: Green YP Market Service APIs
  security:
    oauth2:
      resourceserver:
        jwt:
          audiences: ${GYP_FA_CLIENT_ID}
          issuer-uri: http://auth.greenyp.com/
logging:
  level:
    com:
      green:
        yp: DEBUG
    org:
      springframework:
        security: INFO
      hibernate:
        SQL: INFO
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
circuitbreaker:
  instances:
    geocode-api:
      sliding-window-type: COUNT_BASED
      sliding-window-size: 10
      minimum-number-of-calls: 5
      failure-rate-threshold: 50
      wait-duration-in-open-state: 10s
      permitted-number-of-calls-in-half-open-state: 3
fusionauth:
  green:
    yp:
      apiKey: ${GYP_FA_API_KEY}
      baseUrl: https://auth.greenyp.com
      host: https://auth.greenyp.com
      client:
        id: ${GYP_FA_CLIENT_ID}
        secret: ${GYP_FA_CLIENT_SECRET}
      app:
        id: ${GYP_FA_APP_ID}
      tenant: ${GYP_FA_TENANT_ID}
      connectTimeout: 2000
      readTimeout: 2000
feign:
  client:
    config:
      default:
        connectTimeout: 3000
        readTimeout: 5000
greenyp:
  classified:
    baseUrl: https://www.greenyp.com
  cloud:
    aws:
      s3:
        enabled: true
        region: us-east-1
  geocoder:
    impl: aws
    aws:
      placeIndex: GreenypPlaceIndex
  image:
    service:
      impl: aws
      host: https://greenyp-public-images.s3.amazonaws.com
      bucket: greenyp-public-images
  jwt:
    decoderUrl: https://auth.greenyp.com/.well-known/jwks.json
  payment:
    access-token: ${GYP_SQR_ACCESS_TOKEN}
    environment: ${GYP_SQR_ENVIRONMENT}
    service:
      impl: square
resilience4j:
  ratelimiter:
    instances:
      geocode-api:
        limit-for-period: 10
        limit-refresh-period: 1s
        timeout-duration: 100ms
springdoc:
  swagger-ui:
    oauth2-redirect-url: https://services.greenyp.com/swagger-ui/oauth2-redirect.html
    oauth:
      client-id: ${GYP_FA_CLIENT_ID}
      client-secret: ${GYP_FA_CLIENT_SECRET}
      scopes: openid,profile
      use-pkce-with-authorization-code-grant: true
  oAuthFlow:
    authorization-url: https://auth.greenyp.com/oauth2/authorize
    token-url: https://auth.greenyp.com/oauth2/token