-- MySQL Script generated by MySQL Workbench
-- Thu May 16 16:15:50 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE =
        'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema greenyp
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema greenyp
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `greenyp` DEFAULT CHARACTER SET utf8;
SHOW WARNINGS;
USE `greenyp`;

-- -----------------------------------------------------
-- Table `greenyp`.`producer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer`
(
    `id`                  BINARY(16)   NOT NULL,
    `version`             VARCHAR(45)  NOT NULL,
    `create_date`         DATETIME     NOT NULL,
    `last_update_date`    DATETIME     NOT NULL,
    `tandc_accept_date`   DATETIME     NULL,
    `name`                VARCHAR(60)  NOT NULL,
    `subscription_type`   VARCHAR(45)  NOT NULL,
    `last_bill_date`      DATETIME     NULL,
    `last_bill_paid_date` DATETIME     NULL,
    `cancel_date`         DATETIME     NULL,
    `website_url`         VARCHAR(150) NULL,
    `narrative`           VARCHAR(512) NULL,
    PRIMARY KEY (`id`)
)
    ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_location`
(
    `id`               BINARY(16)   NOT NULL,
    `version`          INT          NOT NULL,
    `create_date`      DATETIME     NOT NULL,
    `last_update_date` VARCHAR(45)  NOT NULL,
    `producer_id`      BINARY(16)   NOT NULL,
    `location_name`    VARCHAR(100) NOT NULL,
    `location_type`    VARCHAR(50)  NOT NULL,
    `display_type`     VARCHAR(50)  NULL,
    `active`           CHAR(1)      NOT NULL DEFAULT 1,
    `address_line_1`   VARCHAR(100) NOT NULL,
    `address_line_2`   VARCHAR(100) NULL,
    `address_line_3`   VARCHAR(100) NULL,
    `city`             VARCHAR(50)  NOT NULL,
    `state`            CHAR(2)      NOT NULL,
    `postal_code`      VARCHAR(10)  NOT NULL,
    `latitude`         VARCHAR(45)  NULL,
    `longitude`        VARCHAR(45)  NULL,
    `website_url`      VARCHAR(150) NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_producer_location_producer`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_producer_location_producer_idx` ON `greenyp`.`producer_location` (`producer_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `prdcr_id_location_idx` ON `greenyp`.`producer_location` (`id` ASC, `producer_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_contact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_contact`
(
    `id`                       BINARY(16)   NOT NULL,
    `producer_id`              BINARY(16)   NOT NULL,
    `version`                  VARCHAR(45)  NOT NULL,
    `create_date`              DATETIME     NOT NULL,
    `last_update_date`         DATETIME     NOT NULL,
    `producer_location_id`     BINARY(16)   NULL,
    `contact_type`             VARCHAR(45)  NOT NULL,
    `display_type`             VARCHAR(50)  NULL,
    `generic_contact_name`     VARCHAR(45)  NULL COMMENT '		',
    `first_name`               VARCHAR(45)  NULL,
    `last_name`                VARCHAR(45)  NULL,
    `phone_number`             VARCHAR(12)  NULL,
    `cell_phone_number`        VARCHAR(45)  NULL,
    `email_confirmation_token` VARCHAR(50)  NULL,
    `email_confirmed`          CHAR(1)      NOT NULL,
    `email_confirmed_date`     DATETIME     NULL,
    `auth_cancel_date`         DATETIME     NULL,
    `email_address`            VARCHAR(150) NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_producer_contact_producer1`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_producer_contact_producer_location1`
        FOREIGN KEY (`producer_location_id`)
            REFERENCES `greenyp`.`producer_location` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_producer_contact_producer1_idx` ON `greenyp`.`producer_contact` (`producer_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_producer_contact_producer_location1_idx` ON `greenyp`.`producer_contact` (`producer_location_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_location_hours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_location_hours`
(
    `id`                   BINARY(16)  NOT NULL,
    `producer_location_id` BINARY(16)  NOT NULL,
    `producer_id`          BINARY(16)  NOT NULL,
    `version`              INT         NOT NULL,
    `create_date`          DATETIME    NOT NULL,
    `last_update_date`     DATETIME    NOT NULL,
    `day_of_week`          VARCHAR(45) NOT NULL,
    `open_time`            VARCHAR(45) NULL,
    `close_time`           VARCHAR(45) NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_producer_location_hours_producer_location1`
        FOREIGN KEY (`producer_location_id`)
            REFERENCES `greenyp`.`producer_location` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_producer_location_hours_producer_location1_idx` ON `greenyp`.`producer_location_hours` (`producer_location_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_user_credentials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_user_credentials`
(
    `id`                      BINARY(16)   NOT NULL,
    `version`                 INT          NOT NULL,
    `create_date`             DATETIME     NOT NULL,
    `last_update_date`        DATETIME     NOT NULL,
    `user_id`                 VARCHAR(150) NOT NULL,
    `producer_id`             BINARY(16)   NOT NULL,
    `producer_contact_id`     BINARY(16)   NULL,
    `first_name`              VARCHAR(50)  NOT NULL,
    `last_name`               VARCHAR(50)  NOT NULL,
    `password`                VARCHAR(100) NOT NULL,
    `extern_auth_service_ref` VARCHAR(25)  NULL,
    `last_change_date`        DATETIME     NOT NULL,
    `admin_user`              CHAR(1)      NOT NULL DEFAULT 'N',
    `enabled`                 CHAR(1)      NULL     DEFAULT 'N',
    `reset_token`             BINARY(16)   NULL,
    `reset_token_timeout`     DATETIME     NULL,
    `email_address`           VARCHAR(150) NULL,
    `registration_ref`        VARCHAR(45)  NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_producer_authorized_user_producer1`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_producer_authorized_user_producer_contact1`
        FOREIGN KEY (`producer_contact_id`)
            REFERENCES `greenyp`.`producer_contact` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `user_id_UNIQUE` ON `greenyp`.`producer_user_credentials` (`user_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_producer_authorized_user_producer1_idx` ON `greenyp`.`producer_user_credentials` (`producer_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_producer_authorized_user_producer_contact1_idx` ON `greenyp`.`producer_user_credentials` (`producer_contact_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_audit`
(
    `id`                    BINARY(16)   NOT NULL,
    `create_date`           DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `producer_id`           BINARY(16)   NULL,
    `action_type`           VARCHAR(50)  NOT NULL,
    `object_type`           VARCHAR(50)  NOT NULL,
    `ip_address`            VARCHAR(15)  NOT NULL,
    `action_ref_id`         VARCHAR(45)  NULL,
    `action_email_address`  VARCHAR(150) NULL,
    `class_name`            VARCHAR(100) NOT NULL,
    `object_data`           JSON         NULL,
    `object_data_encrypted` TEXT         NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_producer_audit_producer1`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_producer_audit_producer1_idx` ON `greenyp`.`producer_audit` (`producer_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `id_UNIQUE` ON `greenyp`.`producer_audit` (`id` ASC, `create_date` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_payment_method`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_payment_method`
(
    `id`                       BINARY(16)  NOT NULL,
    `create_date`              DATETIME    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `last_update_date`         DATETIME    NOT NULL,
    `version`                  INT         NULL,
    `active`                   CHAR(1)     NOT NULL,
    `producer_id`              BINARY(16)  NOT NULL,
    `cancel_date`              DATETIME    NULL,
    `method_type`              VARCHAR(50) NOT NULL,
    `capture_method`           CHAR(1)     NOT NULL,
    `pan_last_four`            CHAR(4)     NOT NULL,
    `payment_method_encrypted` BINARY(100) NOT NULL,
    `payor_name`               BINARY(100) NOT NULL,
    `payor_address_1`          BINARY(100) NOT NULL,
    `payor_address_2`          BINARY(100) NULL,
    `payor_city`               BINARY(100) NOT NULL,
    `payor_state`              BINARY(100) NOT NULL,
    `payor_postal_code`        BINARY(16)  NOT NULL,
    PRIMARY KEY (`id`, `producer_id`),
    CONSTRAINT `fk_producer_payment_method_producer1`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_producer_payment_method_producer1_idx` ON `greenyp`.`producer_payment_method` (`producer_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`line_of_business`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`line_of_business`
(
    `id`                     BINARY(16)    NOT NULL,
    `version`                BIGINT        NOT NULL,
    `create_date`            DATETIME      NOT NULL,
    `last_update_date`       DATETIME      NOT NULL,
    `line_of_business`       VARCHAR(50)   NOT NULL,
    `created_by_type`        VARCHAR(45)   NOT NULL,
    `create_by_reference`    VARCHAR(50)   NULL,
    `enable_distance_radius` CHAR(1)       NULL DEFAULT 'N',
    `description`            VARCHAR(1024) NULL,
    PRIMARY KEY (`id`)
)
    ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`subscription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`subscription`
(
    `id`                       BINARY(16)     NOT NULL,
    `version`                  BIGINT         NOT NULL,
    `create_date`              DATETIME       NOT NULL,
    `last_update_date`         DATETIME       NOT NULL,
    `line_of_business_id`      BINARY(16)     NULL,
    `subscription_type`        VARCHAR(50)    NOT NULL,
    `display_name`             VARCHAR(30)    NOT NULL,
    `sort_order`               INT            NULL,
    `start_date`               DATE           NOT NULL,
    `end_date`                 DATE           NOT NULL,
    `monthly_autopay_amount`   DECIMAL(10, 2) NOT NULL,
    `quarterly_autopay_amount` DECIMAL(10, 2) NOT NULL,
    `annual_bill_amount`       DECIMAL(10, 2) NOT NULL,
    `short_description`        VARCHAR(100)   NOT NULL,
    `html_description`         MEDIUMTEXT     NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_subscription_line_of_business1`
        FOREIGN KEY (`line_of_business_id`)
            REFERENCES `greenyp`.`line_of_business` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_subscription_line_of_business1_idx` ON `greenyp`.`subscription` (`line_of_business_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_subscription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_subscription`
(
    `id`                 BINARY(16)  NOT NULL,
    `version`            BIGINT      NOT NULL,
    `create_date`        DATETIME    NOT NULL,
    `last_update_date`   DATETIME    NOT NULL,
    `producer_id`        BINARY(16)  NOT NULL,
    `subscription_id`    BINARY(16)  NOT NULL,
    `next_invoice_date`  DATETIME    NULL,
    `start_date`         DATE        NOT NULL,
    `end_date`           DATE        NULL,
    `invoice_cycle_type` VARCHAR(45) NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_producer_subscription_producer1`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_producer_subscription_subscription1`
        FOREIGN KEY (`subscription_id`)
            REFERENCES `greenyp`.`subscription` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_producer_subscription_producer1_idx` ON `greenyp`.`producer_subscription` (`producer_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_producer_subscription_subscription1_idx` ON `greenyp`.`producer_subscription` (`subscription_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_invoice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_invoice`
(
    `id`                       BINARY(16)     NOT NULL,
    `version`                  INT            NULL,
    `create_date`              DATETIME       NOT NULL,
    `last_update_date`         DATETIME       NULL,
    `producer_id`              BINARY(16)     NOT NULL,
    `subscription_id`          BINARY(16)     NOT NULL,
    `producer_subscription_id` BINARY(16)     NOT NULL,
    `paid_date`                DATETIME       NULL,
    `invoice_number`           VARCHAR(45)    NULL,
    `invoice_total`            DECIMAL(10, 2) NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_producer_invoice_producer1`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_producer_invoice_producer_subscription1`
        FOREIGN KEY (`producer_subscription_id`)
            REFERENCES `greenyp`.`producer_subscription` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_producer_invoice_subscription1`
        FOREIGN KEY (`subscription_id`)
            REFERENCES `greenyp`.`subscription` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_invoice_producer_idx` ON `greenyp`.`producer_invoice` (`producer_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `invoice_id_UNIQUE` ON `greenyp`.`producer_invoice` (`invoice_number` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `id_producer_idx` ON `greenyp`.`producer_invoice` (`id` ASC, `producer_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_producer_invoice_producer_subscription1_idx` ON `greenyp`.`producer_invoice` (`producer_subscription_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_producer_invoice_subscription1_idx` ON `greenyp`.`producer_invoice` (`subscription_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_payment_transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_payment_transaction`
(
    `id`                            BINARY(16)    NOT NULL,
    `create_date`                   DATETIME      NOT NULL,
    `producer_id`                   BINARY(16)    NOT NULL,
    `payment_method_id`             BINARY(16)    NOT NULL,
    `producer_invoice_id`           BINARY(16)    NOT NULL,
    `payment_type`                  VARCHAR(45)   NOT NULL,
    `amount`                        DECIMAL(7, 2) NULL,
    `status`                        VARCHAR(45)   NULL,
    `reference_number`              VARCHAR(45)   NULL,
    `cvv_response_code`             CHAR(1)       NULL,
    `avs_error_code`                CHAR(1)       NULL,
    `avs_postal_response_code`      CHAR(1)       NULL,
    `avs_street_addr_response_code` CHAR(1)       NULL,
    `response_code`                 VARCHAR(45)   NULL,
    `response_text`                 VARCHAR(255)  NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_producer_payment_transaction_producer_payment_method1`
        FOREIGN KEY (`payment_method_id`, `producer_id`)
            REFERENCES `greenyp`.`producer_payment_method` (`id`, `producer_id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_producer_payment_transaction_producer_invoice1`
        FOREIGN KEY (`producer_invoice_id`)
            REFERENCES `greenyp`.`producer_invoice` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_producer_payment_transaction_producer_payment_method1_idx` ON `greenyp`.`producer_payment_transaction` (`payment_method_id` ASC, `producer_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_producer_payment_transaction_producer_invoice1_idx` ON `greenyp`.`producer_payment_transaction` (`producer_invoice_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `producer_invoice_id_UNIQUE` ON `greenyp`.`producer_payment_transaction` (`producer_invoice_id` ASC, `payment_type` ASC, `status` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_invoice_lineitem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_invoice_lineitem`
(
    `id`                  BINARY(16)     NOT NULL,
    `create_date`         DATETIME       NOT NULL,
    `line_item`           INT            NOT NULL,
    `producer_id`         BINARY(16)     NOT NULL,
    `subscription_id`     BINARY(16)     NOT NULL,
    `producer_invoice_id` BINARY(16)     NOT NULL,
    `description`         VARCHAR(150)   NOT NULL,
    `amount`              DECIMAL(10, 2) NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_invoice_lineitem_producer`
        FOREIGN KEY (`producer_invoice_id`)
            REFERENCES `greenyp`.`producer_invoice` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_invoice_lineitem_subscription`
        FOREIGN KEY (`subscription_id`)
            REFERENCES `greenyp`.`subscription` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `producer_invoice_lineitem_subscription1_idx` ON `greenyp`.`producer_invoice_lineitem` (`subscription_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `producer_invoice_lineitem_idx` ON `greenyp`.`producer_invoice_lineitem` (`producer_invoice_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_product`
(
    `id`                   BINARY(16)     NOT NULL,
    `version`              INT            NOT NULL,
    `create_date`          DATETIME       NOT NULL,
    `last_update_date`     DATETIME       NOT NULL,
    `producer_location_id` BINARY(16)     NOT NULL,
    `producer_id`          BINARY(16)     NOT NULL,
    `product_type`         VARCHAR(50)    NOT NULL,
    `botanical_group`      VARCHAR(50)    NULL,
    `name`                 VARCHAR(100)   NOT NULL,
    `price`                DECIMAL(10, 2) NULL,
    `available_quantity`   INT            NULL,
    `container_size`       VARCHAR(45)    NULL,
    `description`          VARCHAR(512)   NULL,
    `discontinued`         CHAR(1)        NULL,
    `discontinue_date`     DATE           NULL,
    `last_order_date`      DATE           NULL,
    `attributes`           JSON           NULL,
    `product_image`        BLOB           NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_producer_product_producer_location2`
        FOREIGN KEY (`producer_location_id`)
            REFERENCES `greenyp`.`producer_location` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_producer_product_producer1`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_producer_product_producer_location1_idx` ON `greenyp`.`producer_product` (`producer_location_id` ASC, `producer_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_service`
(
    `id`                        BINARY(16)     NOT NULL,
    `version`                   INT            NOT NULL,
    `create_date`               DATETIME       NOT NULL,
    `last_update_date`          DATETIME       NOT NULL,
    `producer_id`               BINARY(16)     NOT NULL,
    `producer_location_id`      BINARY(16)     NOT NULL,
    `min_service_price`         DECIMAL(10, 2) NULL,
    `max_service_price`         DECIMAL(10, 2) NULL,
    `price_units_type`          VARCHAR(50)    NOT NULL,
    `service_short_description` VARCHAR(100)   NOT NULL,
    `service_description`       TEXT           NULL,
    `service_terms`             TEXT           NULL,
    PRIMARY KEY (`id`, `producer_id`, `producer_location_id`),
    CONSTRAINT `fk_producer_service_producer_location1`
        FOREIGN KEY (`producer_location_id`)
            REFERENCES `greenyp`.`producer_location` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_producer_service_producer1`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `service_idx` ON `greenyp`.`producer_service` (`service_short_description` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `prdcr_loc_svc_idx` ON `greenyp`.`producer_service` (`service_short_description` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `producer_service_uk` USING BTREE ON `greenyp`.`producer_service` (`service_short_description`) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_producer_service_producer_location1_idx` ON `greenyp`.`producer_service` (`producer_location_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_producer_service_producer1_idx` ON `greenyp`.`producer_service` (`producer_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_line_of_business`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_line_of_business`
(
    `producer_id`         BINARY(16) NOT NULL,
    `line_of_business_id` BINARY(16) NOT NULL,
    `primary_lob`         CHAR(1)    NOT NULL,
    PRIMARY KEY (`producer_id`, `line_of_business_id`),
    CONSTRAINT `fk_producer_line_of_business_producer1`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_producer_line_of_business_line_of_business1`
        FOREIGN KEY (`line_of_business_id`)
            REFERENCES `greenyp`.`line_of_business` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_producer_line_of_business_line_of_business1_idx` ON `greenyp`.`producer_line_of_business` (`line_of_business_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`lob_service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`lob_service`
(
    `id`                   BINARY(16)   NOT NULL,
    `version`              INT          NOT NULL,
    `create_date`          DATETIME     NOT NULL,
    `last_update_date`     DATETIME     NOT NULL,
    `line_of_business_id`  BINARY(16)   NOT NULL,
    `created_by_type`      VARCHAR(45)  NULL,
    `created_by_reference` VARCHAR(50)  NOT NULL,
    `service_name`         VARCHAR(50)  NOT NULL,
    `service_description`  VARCHAR(512) NULL,
    PRIMARY KEY (`id`, `line_of_business_id`),
    CONSTRAINT `fk_lob_service_line_of_business1`
        FOREIGN KEY (`line_of_business_id`)
            REFERENCES `greenyp`.`line_of_business` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_lob_service_line_of_business1_idx` ON `greenyp`.`lob_service` (`line_of_business_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`invalid_credentials_counter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`invalid_credentials_counter`
(
    `id`                  BINARY(16)   NOT NULL,
    `created_date`        DATETIME     NOT NULL,
    `user_id`             VARCHAR(150) NOT NULL,
    `bad_creds`           VARCHAR(50)  NULL,
    `ip_address`          VARCHAR(45)  NOT NULL,
    `user_credentials_id` BINARY(16)   NOT NULL,
    PRIMARY KEY (`id`)
)
    ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`producer_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`producer_product`
(
    `id`                   BINARY(16)     NOT NULL,
    `version`              INT            NOT NULL,
    `create_date`          DATETIME       NOT NULL,
    `last_update_date`     DATETIME       NOT NULL,
    `producer_location_id` BINARY(16)     NOT NULL,
    `producer_id`          BINARY(16)     NOT NULL,
    `product_type`         VARCHAR(50)    NOT NULL,
    `botanical_group`      VARCHAR(50)    NULL,
    `name`                 VARCHAR(100)   NOT NULL,
    `price`                DECIMAL(10, 2) NULL,
    `available_quantity`   INT            NULL,
    `container_size`       VARCHAR(45)    NULL,
    `description`          VARCHAR(512)   NULL,
    `discontinued`         CHAR(1)        NULL,
    `discontinue_date`     DATE           NULL,
    `last_order_date`      DATE           NULL,
    `attributes`           JSON           NULL,
    `product_image`        BLOB           NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_producer_product_producer_location2`
        FOREIGN KEY (`producer_location_id`)
            REFERENCES `greenyp`.`producer_location` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_producer_product_producer1`
        FOREIGN KEY (`producer_id`)
            REFERENCES `greenyp`.`producer` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_producer_product_producer_location2_idx` ON `greenyp`.`producer_product` (`producer_location_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_producer_product_producer1_idx` ON `greenyp`.`producer_product` (`producer_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `greenyp`.`bontanical_group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `greenyp`.`bontanical_group`
(
    `name`        VARCHAR(50)  NOT NULL,
    `genus`       VARCHAR(45)  NULL,
    `species`     VARCHAR(45)  NULL,
    `sub_species` VARCHAR(45)  NULL,
    `create_date` DATETIME     NOT NULL,
    `description` VARCHAR(512) NULL,
    PRIMARY KEY (`name`)
)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `genus_species_idx` ON `greenyp`.`bontanical_group` (`genus` ASC, `species` ASC) VISIBLE;

SHOW WARNINGS;

SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
