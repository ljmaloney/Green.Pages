---
apiVersion: v1
kind: Namespace
metadata:
  name: fusionauth
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fusionauth-config
  namespace: fusionauth
data:
  POSTGRES_USER: fusion
  POSTGRES_PASSWORD: fusionpass
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: fusionauth
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16.0-bookworm
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: fusionauth-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: fusionauth-config
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: db-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: opensearch
  namespace: fusionauth
spec:
  serviceName: opensearch
  replicas: 1
  selector:
    matchLabels:
      app: opensearch
  template:
    metadata:
      labels:
        app: opensearch
    spec:
      containers:
        - name: opensearch
          image: opensearchproject/opensearch:2.11.0
          env:
            - name: discovery.type
              value: single-node
            - name: plugins.security.disabled
              value: "true"
            - name: OPENSEARCH_JAVA_OPTS
              value: "-Xms512m -Xmx512m"
          ports:
            - containerPort: 9200
          volumeMounts:
            - name: opensearch-data
              mountPath: /usr/share/opensearch/data
  volumeClaimTemplates:
    - metadata:
        name: opensearch-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fusionauth
  namespace: fusionauth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fusionauth
  template:
    metadata:
      labels:
        app: fusionauth
    spec:
      containers:
        - name: fusionauth
          image: fusionauth/fusionauth-app:latest
          ports:
            - containerPort: 9011
          env:
            - name: DATABASE_URL
              value: jdbc:postgresql://postgres:5432/fusionauth
            - name: DATABASE_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: fusionauth-config
                  key: POSTGRES_USER
            - name: DATABASE_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: fusionauth-config
                  key: POSTGRES_PASSWORD
            - name: SEARCH_SERVERS
              value: http://opensearch:9200
            - name: SEARCH_TYPE
              value: elasticsearch
---
apiVersion: v1
kind: Service
metadata:
  name: fusionauth
  namespace: fusionauth
spec:
  selector:
    app: fusionauth
  ports:
    - port: 80
      targetPort: 9011
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fusionauth-ingress
  namespace: fusionauth
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: auth.mygreenyp.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fusionauth
                port:
                  number: 80
  tls:
    - hosts:
        - auth.mygreenyp.com
      secretName: fusionauth-tls
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: luther.maloney@greenyp.com
    privateKeySecretRef:
      name: letsencrypt-prod-private-key
    solvers:
      - http01:
          ingress:
            class: nginx
